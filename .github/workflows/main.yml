name: .NET CI

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Get the date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"
      shell: bash
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Publish
      run: dotnet publish -c Release -o ./build/
    - name: Create INI file
      run: |
        echo "[Settings]" > setting.ini
        echo "BD=${{ steps.date.outputs.date }}" >> setting.ini
      shell: bash
      
    - name: Zip the build output
      run: Compress-Archive -Path ./build/*, ./setting.ini -DestinationPath ./build.zip
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: KEY${{ steps.date.outputs.date }}ENDkEY
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: true
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip
